package com.mindfire.cityservice.service;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.mindfire.cityservice.dto.CityWeatherReport;
import com.mindfire.cityservice.dto.Weather;
import com.mindfire.cityservice.model.City;
import com.mindfire.cityservice.repository.CityRepository;

import feign.FeignException.FeignClientException;

@Service
public class WeatherService {


	@Autowired
	WeatherConsumerService weatherConsumer;
	
	@Autowired
	CityRepository cityRepository;
	
	
	/**
	 *  This method is used to fetch the Weather Report of all the cities in cityList
	 *  
	 * @return {@link List<CityWeatherReport>}
	 */
	public List<CityWeatherReport> getWeatherReport() {
		 
		List<CityWeatherReport> weatherReports = new ArrayList<CityWeatherReport>();
		
		//Iterating all the cities in the City List
		List<City> existingCities = cityRepository.findAll();
		
		for(City city : existingCities) {
			
			try {
			Weather weatherObj = weatherConsumer.getWeather(city.getName());
			
			//Checking for Null values
			if(weatherObj != null 
					&& weatherObj.getLocation() != null 
					&& weatherObj.getCurrent() != null
					&& weatherObj.getForecast()!=null) {
				
				// Adding weatherReport to the weatherReports List.  
				weatherReports.add(
						new CityWeatherReport(
								weatherObj.getLocation().getName(), 
								weatherObj.getCurrent().getCondition().getText(), 
								weatherObj.getForecast().getForecastday().get(0).getDay().getMaxtempC(),
								weatherObj.getForecast().getForecastday().get(0).getDay().getMintempC(),
								weatherObj.getCurrent().getCondition().getIcon()));
			}
		}
		}
		catch(FeignClientException fce) {
			
		}
		
		return weatherReports;
	}

}
