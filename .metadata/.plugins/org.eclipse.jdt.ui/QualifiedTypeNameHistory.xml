<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="java.net.URI"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
    <fullyQualifiedTypeName name="com.mindfire.cityservice.dto.CityWeatherReport"/>
    <fullyQualifiedTypeName name="org.springframework.core.env.Environment"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.mapping.Document"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.repository.config.EnableMongoRepositories"/>
    <fullyQualifiedTypeName name="org.springframework.data.annotation.Id"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.repository.MongoRepository"/>
    <fullyQualifiedTypeName name="com.mindfire.cityservice.model.City"/>
    <fullyQualifiedTypeName name="com.mindfire.cityservice.repository.CityRepository"/>
    <fullyQualifiedTypeName name="com.mindfire.cityservice.service.WeatherService"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonProperty"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonIgnoreProperties"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonAlias"/>
    <fullyQualifiedTypeName name="java.lang.System.Logger"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="feign.FeignException.FeignClientException"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.ResponseErrorHandler"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="com.mindfire.weatherservice.handler.RestTemplateResponseErrorHandler"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="com.mindfire.weatherservice.exception.NotFoundException"/>
    <fullyQualifiedTypeName name="org.springframework.boot.web.client.RestTemplateBuilder"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ControllerAdvice"/>
    <fullyQualifiedTypeName name="org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ExceptionHandler"/>
    <fullyQualifiedTypeName name="com.mindfire.weatherservice.exception.ResourceNotFoundException"/>
    <fullyQualifiedTypeName name="com.mindfire.weatherservice.handler.RestExceptionHandler"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.HttpClientErrorException"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="com.mindfire.weatherservice.exception.ErrorDetails"/>
    <fullyQualifiedTypeName name="java.time.LocalTime"/>
    <fullyQualifiedTypeName name="java.time.LocalDateTime"/>
    <fullyQualifiedTypeName name="java.util.Date"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.HttpServerErrorException"/>
    <fullyQualifiedTypeName name="com.mindfire.weatherservice.exception.GenericException"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="feign.codec.ErrorDecoder"/>
    <fullyQualifiedTypeName name="org.springframework.web.server.ResponseStatusException"/>
    <fullyQualifiedTypeName name="com.mindfire.cityservice.exception.FeignErrorDecoder"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="com.mindfire.cityservice.exception.GenericException"/>
    <fullyQualifiedTypeName name="com.mindfire.cityservice.dto.Weather"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="java.lang.LinkageError"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="com.mindfire.weatherservice.dto.Weather"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="springfox.documentation.swagger2.annotations.EnableSwagger2"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="springfox.documentation.spring.web.plugins.Docket"/>
    <fullyQualifiedTypeName name="springfox.documentation.spi.DocumentationType"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.OpenAPIDefinition"/>
</qualifiedTypeNameHistroy>
